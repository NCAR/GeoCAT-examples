
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/Bar/NCL_unique_5.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_Bar_NCL_unique_5.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_Bar_NCL_unique_5.py:


NCL_unique_5.py
===============
Concepts illustrated:
  - Drawing multiple bar charts on a page
  - Drawing three custom legends outside a bar chart
  - Using bar charts to draw standard deviations for four time series
  - Drawing a time series plot
See following URLs to see the reproduced NCL plot & script:
    - Original NCL script: https://www.ncl.ucar.edu/Applications/Scripts/unique_5.ncl
    - Original NCL plot: https://www.ncl.ucar.edu/Applications/Images/unique_5_lg.png

.. GENERATED FROM PYTHON SOURCE LINES 15-16

Import packages:

.. GENERATED FROM PYTHON SOURCE LINES 16-22

.. code-block:: default

    import numpy as np
    import matplotlib.pyplot as plt
    import random

    from geocat.viz import util as gvutil








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Generate labels:

.. GENERATED FROM PYTHON SOURCE LINES 24-42

.. code-block:: default

    x = np.arange(1, 13)
    labels = [
        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov',
        'Dec'
    ]

    # Generate random data:
    obs = []
    ccsm2_t42 = []
    ccsm3_t42 = []
    ccsm3_t85 = []

    for i in range(12):
        obs.append(random.uniform(0.4, 1.2))
        ccsm2_t42.append(random.uniform(0.4, 1.2))
        ccsm3_t42.append(random.uniform(0.4, 1.2))
        ccsm3_t85.append(random.uniform(0.4, 1.2))








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Create the custom color list.

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    color_list = ['red', 'lightsteelblue', 'blue', 'lime']








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Plot bar chart with a legend

.. GENERATED FROM PYTHON SOURCE LINES 48-118

.. code-block:: default


    # Axis Settings
    plot_y_max = 1.2

    # Generate figure
    plt.figure(2, figsize=(6, 5))
    ax = plt.gca()

    # Set width of each column
    w = 0.15

    # Create subplots for each category
    sub = plt.subplot(111)
    sub.bar(x + w,
            obs,
            width=0.15,
            color=color_list[0],
            edgecolor='black',
            linewidth=0.25,
            align='center')
    sub.bar((x + (2 * w)),
            ccsm2_t42,
            width=0.15,
            color=color_list[1],
            edgecolor='black',
            linewidth=0.25,
            align='center')
    sub.bar(x + 3 * w,
            ccsm3_t42,
            width=0.15,
            color=color_list[2],
            edgecolor='black',
            linewidth=0.25,
            align='center')
    sub.bar(x + 4 * w,
            ccsm3_t85,
            width=0.15,
            color=color_list[3],
            edgecolor='black',
            linewidth=0.25,
            align='center')

    # Add the legend
    plt.legend(['OBS', 'CCSM2 (T42)', 'CCSM3 (T42)', 'CCSM3 (T85)'],
               loc='lower center',
               bbox_to_anchor=(0.5, -0.30),
               ncol=2)

    # Use geocat.viz.util convenience function to set axes limits & tick values without calling several matplotlib functions
    gvutil.set_axes_limits_and_ticks(ax,
                                     ylim=(0.4, plot_y_max),
                                     xticks=x,
                                     xticklabels=labels,
                                     yticks=np.linspace(0.4, plot_y_max, 5))

    # Use geocat.viz.util convenience function to add minor and major tick lines
    gvutil.add_major_minor_ticks(ax,
                                 x_minor_per_major=1,
                                 y_minor_per_major=4,
                                 labelsize=12)

    # Use geocat.viz.util convenience function to set titles and labels
    gvutil.set_titles_and_labels(ax,
                                 maintitle='Nino3.4 Monthly Standard Deviation',
                                 maintitlefontsize=16,
                                 ylabel="(" + u'\N{DEGREE SIGN}' + "C)")

    # Show the plot
    plt.tight_layout()
    plt.show()



.. image:: /gallery/Bar/images/sphx_glr_NCL_unique_5_001.png
    :alt: Nino3.4 Monthly Standard Deviation
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/anissaz/Desktop/GeoCAT/GeoCAT-examples/Plots/Bar/NCL_unique_5.py:60: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.
      sub = plt.subplot(111)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.217 seconds)


.. _sphx_glr_download_gallery_Bar_NCL_unique_5.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: NCL_unique_5.py <NCL_unique_5.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: NCL_unique_5.ipynb <NCL_unique_5.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
