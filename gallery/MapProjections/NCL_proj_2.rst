
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/MapProjections/NCL_proj_2.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_MapProjections_NCL_proj_2.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_MapProjections_NCL_proj_2.py:


NCL_proj_2.py
=============

This script illustrates the following concepts:
   - Drawing filled contours over a Mercator map
   - Setting the spacing for latitude/longitude grid lines
   - Turning off the map perimeter (boundary)
   - Making the plot larger using viewport resources
   - Turning off map fill
   - Spanning part of a color map for contour fill
   - Using 'inferno' color scheme instead of 'rainbow' to follow best practices for visualizations 

See following URLs to see the reproduced NCL plot & script:
    - Original NCL script: https://www.ncl.ucar.edu/Applications/Scripts/proj_2.ncl
    - Original NCL plot: https://www.ncl.ucar.edu/Applications/Images/proj_2_lg.png

.. GENERATED FROM PYTHON SOURCE LINES 20-21

Import packages:

.. GENERATED FROM PYTHON SOURCE LINES 21-29

.. code-block:: default

    import numpy as np
    import xarray as xr
    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt
    import matplotlib.ticker as mticker
    import geocat.datafiles as gdf
    from geocat.viz import util as gvutil








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Read in data:

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: default


    # Open a netCDF data file using xarray default engine and load the data into xarrays
    ds = xr.open_dataset(gdf.get("netcdf_files/atmos.nc"), decode_times=False)
    t = ds.TS.isel(time=0)








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Fix the artifact of not-shown-data around 0 and 360-degree longitudes

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: default


    wrap_t = gvutil.xr_add_cyclic_longitudes(t, "lon")








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Plot:

.. GENERATED FROM PYTHON SOURCE LINES 43-85

.. code-block:: default


    # Generate figure (set its size (width, height) in inches)
    fig = plt.figure(figsize=(10, 10))

    # Generate axes using Cartopy and draw coastlines
    ax = plt.axes(projection=ccrs.Mercator(min_latitude=-84.5))
    ax.coastlines(linewidths=0.5)

    # Set extent to include latitudes from -90 to 89 and longitudes from -180
    # to 180
    ax.set_extent([180, -180, -90, 89], ccrs.PlateCarree())

    # Draw gridlines
    gl = ax.gridlines(crs=ccrs.PlateCarree(), linewidth=1, color='black', alpha=0.5)

    # Manipulate latitude and longitude gridline numbers and spacing
    gl.ylocator = mticker.FixedLocator(np.arange(-84.5, 91, 20))
    gl.xlocator = mticker.FixedLocator(np.arange(-180, 181, 20))

    # Contourf-plot data (for filled contours)
    wrap_t.plot.contourf(ax=ax,
                         transform=ccrs.PlateCarree(),
                         levels=12,
                         cmap='inferno',
                         add_colorbar=False)

    # Contour-plot data (for borderlines)
    wrap_t.plot.contour(ax=ax,
                        transform=ccrs.PlateCarree(),
                        levels=12,
                        linewidths=0.5,
                        cmap='black')

    # Use geocat.viz.util convenience function to add titles to left and right
    # of the plot axis.
    gvutil.set_titles_and_labels(ax,
                                 maintitle="Example of Mercator Projection",
                                 lefttitle="Surface Temperature",
                                 righttitle="K")

    # Show the plot
    plt.show()



.. image:: /gallery/MapProjections/images/sphx_glr_NCL_proj_2_001.png
    :alt: Surface Temperature, Example of Mercator Projection, K
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.557 seconds)


.. _sphx_glr_download_gallery_MapProjections_NCL_proj_2.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: NCL_proj_2.py <NCL_proj_2.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: NCL_proj_2.ipynb <NCL_proj_2.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
