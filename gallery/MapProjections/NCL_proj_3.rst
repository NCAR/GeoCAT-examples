
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/MapProjections/NCL_proj_3.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_MapProjections_NCL_proj_3.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_MapProjections_NCL_proj_3.py:


NCL_proj_3.py
=============

This script illustrates the following concepts:
   - Drawing filled contours over an orthographic map
   - Changing the center latitude and longitude for an orthographic projection
   - Turning off map fill

See following URLs to see the reproduced NCL plot & script:
    - Original NCL script: https://www.ncl.ucar.edu/Applications/Scripts/proj_3.ncl
    - Original NCL plot: https://www.ncl.ucar.edu/Applications/Images/proj_3_lg.png

.. GENERATED FROM PYTHON SOURCE LINES 15-16

Import packages:

.. GENERATED FROM PYTHON SOURCE LINES 16-23

.. code-block:: default

    import numpy as np
    import xarray as xr
    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt
    import geocat.datafiles as gdf
    from geocat.viz import util as gvutil








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Read in data:

.. GENERATED FROM PYTHON SOURCE LINES 25-30

.. code-block:: default


    # Open a netCDF data file using xarray default engine and load the data into xarrays
    ds = xr.open_dataset(gdf.get("netcdf_files/atmos.nc"), decode_times=False)
    t = ds.TS.isel(time=0)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Fix the artifact of not-shown-data around 0 and 360-degree longitudes

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    wrap_t = gvutil.xr_add_cyclic_longitudes(t, "lon")








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Plot:

.. GENERATED FROM PYTHON SOURCE LINES 36-77

.. code-block:: default


    # Generate figure (set its size (width, height) in inches)
    fig = plt.figure(figsize=(10, 10))

    # Generate axes using Cartopy and draw coastlines with
    ax = plt.axes(
        projection=ccrs.Orthographic(central_longitude=-120, central_latitude=50))

    # Set extent to include latitudes between 0 and 90, and longitude between
    # 0 and -180 only
    ax.set_extent([0, -180, 0, 90], ccrs.PlateCarree())
    ax.set_global()
    ax.coastlines(linewidths=0.5)

    # Plot data and add a colorbar
    temp = wrap_t.plot.contourf(
        ax=ax,
        transform=ccrs.PlateCarree(),
        levels=11,
        cmap='coolwarm',
        add_colorbar=False)

    cbar_ticks = np.arange(210, 311, 10)
    cbar = plt.colorbar(temp, 
                        orientation='horizontal', 
                        shrink=0.75, 
                        pad=0.05, 
                        extendrect=True,
                        ticks=cbar_ticks)

    cbar.ax.tick_params(labelsize=10)

    # Use geocat.viz.util convenience function to add titles to left and right
    # of the plot axis.
    gvutil.set_titles_and_labels(ax,
                                 maintitle="Example of Orthogonal Projection",
                                 lefttitle="Surface Temperature",
                                 righttitle="K")

    # Show the plot
    plt.show()



.. image:: /gallery/MapProjections/images/sphx_glr_NCL_proj_3_001.png
    :alt: Surface Temperature, Example of Orthogonal Projection, K
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.498 seconds)


.. _sphx_glr_download_gallery_MapProjections_NCL_proj_3.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: NCL_proj_3.py <NCL_proj_3.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: NCL_proj_3.ipynb <NCL_proj_3.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
