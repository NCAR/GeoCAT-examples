
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/Regression/NCL_regress_1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_Regression_NCL_regress_1.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_Regression_NCL_regress_1.py:


NCL_regress_1.py
================
This script illustrates the following concepts:
   - Read tabular values from an ascii file
   - Calculating the least squared regression for a one dimensional array
   - Drawing a scatter plot with a regression line
   - Changing the size and color of markers, thickness of line

See following URLs to see the reproduced NCL plot & script:
    - Original NCL script: https://www.ncl.ucar.edu/Applications/Scripts/regress_1.ncl
    - Original NCL plots: https://www.ncl.ucar.edu/Applications/Images/regress_1_lg.png

.. GENERATED FROM PYTHON SOURCE LINES 16-17

Import packages

.. GENERATED FROM PYTHON SOURCE LINES 17-23

.. code-block:: default

    import numpy as np
    import matplotlib.pyplot as plt

    import geocat.datafiles as gdf
    from geocat.viz import util as gvutil








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Read in data:

.. GENERATED FROM PYTHON SOURCE LINES 25-34

.. code-block:: default


    # Open a ascii data file using numpy's loadtxt
    # Specify the delimiter from the file
    # Read in the data as a floats
    x, y = np.loadtxt(gdf.get("ascii_files/regress_1.txt"),
                      delimiter=',',
                      unpack=True,
                      dtype=float)








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Calculate regression:

.. GENERATED FROM PYTHON SOURCE LINES 36-41

.. code-block:: default


    # Use numpy's polyfit to calculate a linear regression
    # This function outputs [a, b], where y = ax + b in the regression fit
    [a, b] = np.polyfit(x, y, 1)








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Transform the found regression model for plotting

.. GENERATED FROM PYTHON SOURCE LINES 43-49

.. code-block:: default


    # Now that we have a y = ax + b, we can evaluate this model over a range,
    # which will give us points to plot
    x_regress = range(int(min(x)), int(max(x)))
    y_regress = a * x_regress + b








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Plot

.. GENERATED FROM PYTHON SOURCE LINES 51-86

.. code-block:: default


    # Generate figure (set its size (width, height) in inches) and axes
    plt.figure(figsize=(6, 6))
    ax = plt.gca()

    # Plot original data
    # Note that the s parameter sets the size of the markers in pts
    plt.scatter(x, y, color='red', s=4)

    # Plot regression
    plt.plot(x_regress, y_regress, color='black', linewidth=0.5)

    # specify X and Y axis limits
    plt.xlim([6000, 9000])
    plt.ylim([266, 274])

    # Use geocat.viz utility functions to add a main title
    gvutil.set_titles_and_labels(ax=ax, maintitle="Regression 1")

    # Use geocat.viz.util convenience function to add minor and major tick lines
    gvutil.add_major_minor_ticks(ax,
                                 x_minor_per_major=5,
                                 y_minor_per_major=4,
                                 labelsize=12)

    # Use geocat.viz.util convenience function to set axes parameters
    gvutil.set_axes_limits_and_ticks(ax,
                                     xlim=(6000, 9000),
                                     xticks=np.arange(6000, 9001, 500),
                                     ylim=(266, 274),
                                     yticks=np.arange(266, 275, 2))

    # Show plot
    plt.tight_layout()
    plt.show()



.. image:: /gallery/Regression/images/sphx_glr_NCL_regress_1_001.png
    :alt: Regression 1
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.162 seconds)


.. _sphx_glr_download_gallery_Regression_NCL_regress_1.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: NCL_regress_1.py <NCL_regress_1.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: NCL_regress_1.ipynb <NCL_regress_1.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
