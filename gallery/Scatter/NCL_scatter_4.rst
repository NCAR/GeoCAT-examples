
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/Scatter/NCL_scatter_4.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_Scatter_NCL_scatter_4.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_Scatter_NCL_scatter_4.py:


NCL_scatter_4.py
================
This script illustrates the following concepts:
   - Drawing a scatter plot with a regression line
   - Drawing a time series plot
   - Calculating the least squared regression for a one dimensional array
   - Smoothing data so that seasonal cycle is less prominent
   - Changing the markers in an XY plot
   - Changing the marker color in an XY plot
   - Changing the marker size in an XY plot

See following URLs to see the reproduced NCL plot & script:
    - Original NCL script: https://www.ncl.ucar.edu/Applications/Scripts/scatter_4.ncl
    - Original NCL plot: https://www.ncl.ucar.edu/Applications/Images/scatter_4_lg.png

.. GENERATED FROM PYTHON SOURCE LINES 19-20

Import packages:

.. GENERATED FROM PYTHON SOURCE LINES 20-27

.. code-block:: default

    import numpy as np
    import xarray as xr
    import matplotlib.pyplot as plt

    import geocat.datafiles as gdf
    from geocat.viz import util as gvutil








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Read in data:

.. GENERATED FROM PYTHON SOURCE LINES 29-36

.. code-block:: default


    # Open a netCDF data file using xarray default engine and load the data into xarrays
    ds = xr.open_dataset(gdf.get("netcdf_files/b003_TS_200-299.nc"),
                         decode_times=False)
    # Extract variable
    ts = ds.TS.sel(lat=60, lon=180, method='nearest')








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Preprocess data:

.. GENERATED FROM PYTHON SOURCE LINES 38-47

.. code-block:: default


    # Smooth data so that seasonal cycle is less prominent.
    # This is for demo purposes only  so that the regression line is more sloped.
    ts_rolled = ts.rolling(time=40, center=True).mean().dropna('time')

    # Calculate regression line
    m, b = np.polyfit(ts_rolled.time, ts_rolled.values, 1)
    regline_vals = [m * x + b for x in ts.time]








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Plot:

.. GENERATED FROM PYTHON SOURCE LINES 49-79

.. code-block:: default


    # Generate figure (set its size (width, height) in inches) and axes
    plt.figure(figsize=(6.2, 6))
    ax = plt.gca()

    # Scatter-plot the data
    plt.scatter(ts_rolled.time, ts_rolled.values, c='red', s=3)

    # Plot a regression line
    plt.plot(ts.time, regline_vals, 'black')

    # specify X and Y axis limits
    plt.xlim([6000, 9500])
    plt.ylim([268.0, 271.5])

    # Use geocat.viz.util convenience function to add minor and major tick lines
    gvutil.add_major_minor_ticks(ax,
                                 x_minor_per_major=5,
                                 y_minor_per_major=5,
                                 labelsize=12)

    # Use geocat.viz.util convenience function to set titles and labels without calling several matplotlib functions
    gvutil.set_titles_and_labels(ax,
                                 maintitle="Output from regline",
                                 xlabel="simulation time",
                                 ylabel="Surface temperature")

    # Show the plot
    plt.tight_layout()
    plt.show()



.. image:: /gallery/Scatter/images/sphx_glr_NCL_scatter_4_001.png
    :alt: Output from regline
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.264 seconds)


.. _sphx_glr_download_gallery_Scatter_NCL_scatter_4.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: NCL_scatter_4.py <NCL_scatter_4.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: NCL_scatter_4.ipynb <NCL_scatter_4.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
